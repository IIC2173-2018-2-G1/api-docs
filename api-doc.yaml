swagger: "2.0"
info:
  description: "Documentación para proyecto 2018-2"
  version: "1.0.0"
  title: "Arquitrán SPA API"
  # termsOfService: "http://swagger.io/terms/"
  # contact:
  #   email: "apiteam@swagger.io"
  # license:
  #   name: "Apache 2.0"
  #   url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "to-be-disclosed.com"
basePath: "/api/v1"
tags:
- name: "user"
  description: "Operaciones de usuarios"
- name: "channels"
  description: "Operaciones sobre canales"
- name: "messages"
  description: "Operaciones sobre mensajes"
- name: "reactions"
  description: "Operaciones sobre reacciones a mensajes"
- name: "hashtags"
  description: "Operaciones sobre hashtags"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: ""
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        
        schema:
          $ref: "#/definitions/User"
      responses:
        '200':
          description: "User created succesfully"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
              username:
                type: "string"
              first_name:
                type: "string"
              last_name:
                type: "string"
              email:
                type: "string"
        '405':
          description: "Invalid input"
        
          
    put:
      tags:
      - "user"
      summary: "Update user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:

      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
        405:
          description: "Validation exception"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      parameters:
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            password:
              type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                format: "int64"
              username:
                type: "string"
              first_name:
                type: "string"
              last_name:
                type: "string"
              email:
                type: "string"
        400:
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Succesfull operation"
        405:
          description: "Validation exception"                    
  
  /user/reset-password:
    get:
      tags:
      - "user"
      summary: "Request for a password reset"
      description: ""
      operationId: "resetPassword"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
      responses:
        400:
          description: "Email does not match"
        405:
          description: "Validation exception" 


  /user/subscriptions:
    get:
      tags:
      - "user"
Smartbear
Terms of Use | SmartBear Software
End-User License Agreement between SmartBear Software and customers from USA & Canada.
- "channels"
      summary: "Get channels to which user is subscribed"
      description: ""
      operationId: "getUserSubscriptions"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
        405:
          description: "Validation exception"

  /messages:
    post:
      tags:
      - "messages"
      summary: "Creates a new message"
      description: ""
      operationId: "createMessage"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created message object"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        200:
          description: "Message created succesfully"
          schema:
            $ref: "#/definitions/Message"
        400:
          description: "Invalid input"
        405:
          description: "Validation exception"

    get:
      tags:
      - "messages"
      summary: "Gets an array of messages"
      description: "Starting from the newest message number _start_, returns the following _count_ messages for the given channel. hashtag is  optional. If provided, it filters the message according to the hashtag"
      operationId: "getMessages"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created message object"
        required: true
        schema:
          type: "object"
          properties:
            channel_id:
              type: "integer"
              format: "int64"
            hashtag:
              type: "string"
            count:
              type: "integer"
              format: "int64"
            start:
              type: "integer"
              format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/Message"
        400:
          description: "Invalid input"
        405:
          description: "Validation exception"

  /messages/{message_id}/reactions:
    get:
      tags:
      - "messages"
      - "reactions"
      summary: "Gets all reactions for a given message"
      description: ""
      operationId: "createMessage"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                reaction_id:
                  type: "integer"
                  format: "int64"
                username:
                  type: "string"
        405:
          description: "Validation exception"
    post:
      tags:
      - "messages"
      - "reactions"
      summary: "Adds a reaction to a message"
      description: ""
      operationId: "createOrModifyReaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created/Modified reaction object"
        required: true
        schema:
          type: "object"
          properties:
            reaction_id:
              type: "integer"
              format: "int64"
      responses:
        200:
          description: "successful operation"     
        404:
          description: "Reaction not found"
        405:
          description: "Validation exception"   
    delete:
      tags:
      - "messages"
      - "reactions"
      summary: "Deletes a reaction of a message"
      description: ""
      operationId: "createMessage"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created/Modified reaction object"
        required: true
        schema:
          type: "object"
          properties:
            reaction_id:
              type: "integer"
              format: "int64"
      responses:
        200:
          description: "successful operation" 
        400:
          description: "Ca
n not delete a reaction you have not created"    
        404:
          description: "Reaction not found"
        405:
          description: "Validation exception" 

  /channels:
    get:
      tags:
        - "channels"
      summary: "Obtener una lista de todos los canales"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Channel"
        405:
          description: "Validation exception"
    post:
      tags:
      - "channels"
      summary: "Crear un nuevo canal"
      description: ""
      operationId: "createChannel"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created channel object"
        required: true
        schema:
          $ref: "#/definitions/Channel"
      responses:
        200: 
          description: "successful operation"
          schema:
            $ref: "#/definitions/Channel"
        405:
          description: "Validation exception"
    
  /channels/{channel_id}:
    get:
      tags:
      - "channels"
      summary: "Obtener la información de un canal"
      responses:
        200: 
          description: "successful operation"
          schema:
            $ref: "#/definitions/Channel"
        404:
          description: "Channel not found"
        405:
          description: "Validation exception"
    put:
      tags:
      - "channels"
      summary: "Editar un canal"
      description: ""
      operationId: "createChannel"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created channel object"
        required: true
        schema:
          $ref: "#/definitions/Channel"
      responses:
        200: 
          description: "successful operation"
          schema:
            $ref: "#/definitions/Channel"
        404:
          description: "Channel not found"
        405:
          description: "Validation exception"
        
  /hashtags:
    get:
      tags:
      - "hashtags"
      summary: "Gets all hashtags"
      description: ""
      operationId: "getHashtags"
      responses:
        200: 
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hashtag"
        405:
          description: "Validation exception"
          
# securityDefinitions:
#   petstore_auth:
#     type: "oauth2"
#     authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
#     flow: "implicit"
#     scopes:
#       write:pets: "modify pets in your account"
#       read:pets: "read your pets"
#   api_key:
#     type: "apiKey"
#     name: "api_key"
#     in: "header"

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        readOnly: true
      username:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
        writeOnly: true
  Channel:
    type: "object"
    properties:
      id:
        readOnly: true
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
  Message:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        readOnly: true
      channel_id:
        type: "integer"
        format: "int64"
      author_id:
        readOnly: true
        type: "integer"
        format: "int64"
      content:
        type: "string"
      response_to:
        type: "integer"
        format: "int64"
        default: null
      reactions:
        readOnly: true
        type: "array"
        items:
          type: "object"
          properties:
            reaction_id: 
              type: "integer"
              format: "int64"
            count:
              type: "integer"
        default: null        
  Reaction:
    type: "object"
    properti
es:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Hashtag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"